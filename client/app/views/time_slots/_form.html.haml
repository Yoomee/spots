-unique_id = "activity_#{time_slot.activity_id}_time_slot_#{time_slot.id}"
-semantic_remote_form_for time_slot, :html => {:id => "activity_#{time_slot.activity_id}_time_slot_form#{time_slot.new_record? ? '' : "_#{time_slot.id}"}", :class => "#{'disabled' if disabled}"} do |form|
  -form.inputs do
    =form.input :organisation_id, :as => :hidden, :wrapper_html => {:id => "#{unique_id}_organisation_id_input"}, :input_html => {:id => "time_slot_#{time_slot.id}_organisation_id"}
    =form.input :activity_id, :as => :hidden, :wrapper_html => {:id => "#{unique_id}_activity_id_input"}, :input_html => {:id => "#{unique_id}_activity_id"}
    -if time_slot.new_record? || time_slot.date.present?
      .time_slot_date{:style => "display:#{time_slot.date.present? ? 'block' : 'none'}"}
        %li
          %label Date
        =form.input :date, :as => :tramlines_date, :disabled => disabled
    -if time_slot.new_record? || time_slot.date.blank?
      .time_slot_days{:style => "display:#{time_slot.date.present? ? 'none' : 'block'}"}
        -TimeSlot::DAYS.each do |day|
          =form.input day, :wrapper_html => {:class => "time_slot_day_input", :id => "#{unique_id}_#{day}_input"}, :input_html => {:id => "#{unique_id}_#{day}", :disabled => disabled}
      
    =form.input :starts_at_string, :as => :select, :label => "From", :collection => (7..23).map{|h| ["%02d:00" % h,"%02d:30" % h]}.flatten, :include_blank => false, :wrapper_html => {:id => "#{unique_id}_starts_at_string_input"}, :input_html => {:id => "#{unique_id}_starts_at_string", :disabled => disabled}
    =form.input :ends_at_string, :as => :select, :label => "To", :collection => (7..23).map{|h| ["%02d:00" % h,"%02d:30" % h]}.flatten, :include_blank => false, :wrapper_html => {:id => "#{unique_id}_ends_at_string_input"}, :input_html => {:id => "#{unique_id}_ends_at_string", :disabled => disabled}
    -if !time_slot.errors.on_base.blank?
      %li.time_slot_errors=[*time_slot.errors.on_base].join(' ').sub(/Starts_at must be before ends_at/, "End time must be after the start time")
    %li.note
      %p
        %em=time_slot.note
    =form.input :note, :label => false, :wrapper_html => {:id => "#{unique_id}_note_input", :class => "note_input"}, :input_html => {:id => "#{unique_id}_note", :class => "labelify", :title => "Add a note here...", :rows => 1, :cols => 68}
  -form.buttons do
    =form.commit_button "Save", :button_html => {:id => "#{unique_id}_submit"}
    -if disabled && !time_slot.new_record?
      =link_to_function("Edit", "TimeSlot.toggleEdit('#{"activity_#{time_slot.activity_id}_time_slot_form_#{time_slot.id}"}')", :class => "edit_link")
      =link_to_remote("Delete", :url => time_slot_path(time_slot), :method => :delete, :html => {:class => "delete_link"}, :confirm => "Are you sure?")
      